using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using ReedSolomonNS;
namespace ReedSolomonTests
{
    [TestClass]
    public class ReedSolomonTests
    {
        static int[] err_pos_13_errors = new int[]
            {
                23,24,26,27,30,8,32,10,34,12,13,19,21,0,0,0
            };

        static byte[] TLM_with13_Errors = new byte[]
        {
            204,121,174,96,154,13,240,124,81,140,179,246,201,215,88,34,88,131,125,124,42,39,191,120,14,181,225,62,148,150,235,156,255,159,124,172,52,21,133,88,74,86,141,217,79,71,178,99,69,54,127,152,90,186,129,131,20,33,13,241,57,119,105,119,253,138,35,69,136,85,194,87,168,178,78,182,158,221,27,57,106,93,247,48,174,170,170,251,130,193,201,244,108,200,0,223,189,160,73,251,47,148,133,228,241,100,93,101,61,133,216,48,209,190,238,65,146,149,248,40,90,133,140,100,161,238,87,143,230,225,236,41,167,85,9,200,248,168,58,250,124,247,110,229,187,22,220,227,45,175,241,224,187,110,24,169,75,88,169,31,225,35,216,51,70,40,21,145,205,176,117,180,92,136,217,203,82,239,185,134,84,87,231,193,66,30,49,18,153,189,86,63,210,3,176,38,131,92,47,35,139,36,235,105,237,209,179,150,165,223,115,140,40,111,205,130,133,61,96,36,51,28,172,12,148,228,78,4,155,226,90,129,251,226,56,115,106,11,198,200,4,190,5,244,244,196,39,236,255,240,250,15,8,126,96
        };

        static byte[] TLM_with_13_errors_corrected = new byte[]
        {
            204,121,174,96,154,13,240,124,80,140,147,246,73,87,88,34,88,131,125,60,42,38,191,88,10,181,97,42,148,150,171,156,254,159,92,172,52,21,133,88,74,86,141,217,79,71,178,99,69,54,127,152,90,186,129,131,20,33,13,241,57,119,105,119,253,138,35,69,136,85,194,87,168,178,78,182,158,221,27,57,106,93,247,48,174,170,170,251,130,193,201,244,108,200,0,223,189,160,73,251,47,148,133,228,241,100,93,101,61,133,216,48,209,190,238,65,146,149,248,40,90,133,140,100,161,238,87,143,230,225,236,41,167,85,9,200,248,168,58,250,124,247,110,229,187,22,220,227,45,175,241,224,187,110,24,169,75,88,169,31,225,35,216,51,70,40,21,145,205,176,117,180,92,136,217,203,82,239,185,134,84,87,231,193,66,30,49,18,153,189,86,63,210,3,176,38,131,92,47,35,139,36,235,105,237,209,179,150,165,223,115,140,40,111,205,130,133,61,96,36,51,28,172,12,148,228,78,4,155,226,90,129,251,226,56,115,106,11,198,200,4,190,5,244,244,196,39,236,255,240,250,15,8,126,96
        };

        static byte[] data_to_be_encoded = new byte[]
        {
            204,121,86,152,154,13,240,124,81,116,147,246,73,87,88,34,38,115,125,60,42,38,191,88,10,181,97,42,148,150,171,156,254,159,92,172,52,21,133,88,74,87,190,217,70,98,178,99,69,54,127,152,90,186,129,131,20,33,13,241,57,119,137,135,2,138,35,69,136,85,194,87,168,178,78,182,158,221,27,57,106,93,247,48,174,170,170,250,177,193,207,155,108,200,0,223,189,160,73,251,47,148,133,228,241,100,93,101,61,133,216,48,209,190,238,65,146,149,248,40,90,133,140,100,161,238,87,143,230,225,236,41,167,85,9,200,248,168,58,250,124,247,110,229,187,22,220,227,45,175,241,224,187,110,24,169,75,88,169,31,225,35,216,51,70,40,21,145,205,176,117,180,92,136,217,203,82,239,185,134,84,87,231,193,66,30,49,18,153,189,86,63,210,3,176,38,131,92,47,35,139,36,235,105,237,209,179,150,165,223,115,140,40,111,205,130,133,61,96,36,51,28,172
        };

        static byte[] rs_codes = new byte[]
        {
            216,243,166,234,49,131,59,99,78,166,140,246,32,233,112,34,157,54,106,168,179,75,236,191,230,75,133,132,152,197,158,77
        };
        [TestMethod]
        public void ReedSolomonEncodeTest()
        {
            byte[] parity = new byte[32];
            ReedSolomon.encode_rs_8_c(ref data_to_be_encoded, ref parity, 0);
            CollectionAssert.AreEqual(rs_codes, parity);
        }

        [TestMethod]
        public void ReedSolomonDecodeTest()
        {
            int[] eras_pos = new int[16];
            byte[] tmp_array = new byte[255];
            Array.Copy(TLM_with13_Errors, tmp_array, 255);
            int err_count = ReedSolomon.decode_rs_8(ref tmp_array, ref eras_pos, 0, 0);
            Assert.AreEqual(13, err_count);
            CollectionAssert.AreEqual(err_pos_13_errors, eras_pos);
            CollectionAssert.AreEqual(TLM_with_13_errors_corrected, tmp_array);
        }
    }
}
